"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""

# def my_div(arg1, arg2, a='Деление на 0 запрещено!'):
#     if arg2 == 0:
#         try:
#             print(arg1 / 0)
#         except ZeroDivisionError:
#             print('Error')
#             return a
#     div = arg1 / arg2
#     print('Результат деления первого числа на второе: ')
#     return div
#
#
# print(my_div(arg1=float(input("Укажите первое число: ")), arg2=float(input("Укажите второе число: ")),
#              a='Деление на 0 запрещено!'))


"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные 
аргументы. Реализовать вывод данных о пользователе одной строкой.
"""

"""
Переменные:
first_name - имя
second_name - фамилия
year - год рождения
city - город проживания
email -  email
phone - телефон
"""

# def my_func(first_name, second_name, year, city, email, phone):
#     res = f'\n Данные о пользователе: \n Имя пользователя: {first_name}; \n Фамилия пользователя {second_name}; \n ' \
#           f'Год рождения: {year};\n Город проживания: {city};\n Адрес электронной почты: {email};\n ' \
#           f'Номер телефона: {phone}.'
#     return res
#
#
# print(my_func(first_name=input('Введите ваше имя: '), second_name=input('Введите вашу фамилию: '),
#               year=input('Введите год рождения: '), city=input('Введите город проживания: '),
#               email=input('Введите адрес электронной почты: '), phone=input('Введите номер телефона: ')))

"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух
аргументов.
"""

# def my_func(var_1, var2, var3):
#     list3 = [var_1, var2, var3]
#     list3.sort(reverse=True)
#     res = list3[0] + list3[1]
#     return res
#
#
# print('Сумма наибольших двух аргументов:', my_func(45.4, 30, 50))

"""
4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить
возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания
необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""
"""
Действительными или вещественными числами называются все положительные числа, отрицательные числа и нуль.
Целыми числами называются все натуральные числа, все числа противоположные им по знаку и нуль.
"""

# def my_func():
#     x = abs(float(input("Укажите действительное положительное число X: ")))
#     y = (abs(int(input("Укажите отрицательное число Y: "))) * (-1))
#     a = 'Y не должен быть нулём'
#     if y == 0:
#         return a
#     res = x ** y
#     return res
#
#
# print(my_func())

# def my_func():
#     x = abs(float(input("Укажите действительное положительное число X: ")))
#     y = abs(int(input("Укажите отрицательное число Y: ")))
#     a = 'Y не должен быть нулём'
#     if y == 0:
#         return a
#     i = 1
#     res = 1
#     while i <= y:
#         res /= x
#         i += 1
#     return res
#
#
# print(my_func())

"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться 
сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный 
символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно 
добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""

# def my_func():
#     ext = False
#     res = 0
#     while not ext:
#         arg = input(f'Введите числа через пробел. Для вывода промежуточной суммы, нажмите Enter или Q для выхода: ')
#         str_list = arg.split()  # преобразовываем строку в список
#         sum_list = 0
#         for el in range(len(str_list)):
#             if str_list[el] == 'q' or str_list[el] == 'Q':  # проверка на анличие спецсимвола Q
#                 ext = True
#                 break
#             else:
#                 sum_list += float(str_list[el])  # либо int() для целых чисел
#         res += sum_list
#         print(f'Текущая сумма: {res}')
#
#     print(f'Конечная сумма: {res}')
#
#
# my_func()

"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной 
первой буквой. Например, print(int_func(‘text’)) -> Text.
"""

# def int_func(w):
#     ext_w = w.capitalize()
#     return ext_w
#
#
# print(int_func(input(f'Введите слово: ')))

"""
7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово
состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с
заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
"""


# Var_1
# def int_new_func(s):
#     ext_w = s.title()
#     return ext_w
#
#
# print(int_new_func(input(f'Введите строку из слов через пробел: ')))

# var_2
# def int_new_func():
#     s = input(f'Введите строку из слов через пробел: ').split()
#     for el in s:
#         def int_func(el):
#             ext_w = el.capitalize()
#             return ext_w
#
#         print(int_func(el))
#
#
# print(int_new_func())
